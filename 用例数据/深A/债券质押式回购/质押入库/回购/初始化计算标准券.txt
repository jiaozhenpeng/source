time=2021-08-09 15:16:35.513, nano=518722441948192, cost=2.53, sid=279, sql=DELETE FROM stklist WHERE stkId = '131991';

time=2021-08-09 15:16:35.520, nano=518722448876757, cost=6.908, sid=279, sql=DELETE FROM  STKlIST a WHERE a.exchId='1' and stkType='C4' AND  not exists (select 'X' from ( SELECT exchId, regId, deskId, stkId, SUM(qty) currentQty ,SUM(qty2) usableQty  FROM ( SELECT a.exchId exchId, a.regId regId, a.deskId deskId, 131990 stkId,  TRUNC(SUM(a.bondPledgeQty * b.standardConvertRate * 100)) qty , TRUNC(SUM(a.BondPledgeUsableQty * b.newconvertrate * 100)) qty2 FROM StkList a, BondPara b, Registration r WHERE b.exchId = a.exchId AND b.bondId = a.stkId     AND a.exchId = '1'  AND (a.bondPledgeQty <> 0 OR a.BondPledgeUsableQty <> 0)     AND r.exchId = a.exchId AND r.regId = a.regId GROUP BY a.exchId, a.regId, a.deskId  UNION ALL  SELECT a.exchId, a.regId, a.deskId, 131990 stkId,  SUM(-a.knockQty) * 100 qty ,  SUM(CASE WHEN deliveryFlag = 0 THEN -a.knockQty*100 WHEN a.returnDate > 20210810235959 AND b.stkuseableflag = 1 THEN -a.knockQty*100 WHEN b.stkuseableflag = 0 THEN -a.knockQty*100 ELSE 0 END) qty2  FROM Unduerepurchasebonds a,RepurchasePara b  WHERE a.exchId =b.exchId AND a.stkId = b.stkId  AND a.financeOrderFlag = 0 AND a.stkType = 'A4' AND a.exchId = '1'   GROUP BY a.exchId, a.regId, a.deskId  UNION ALL  SELECT a.exchId, a.regId, a.deskId, 131990 stkId,  0 qty ,  -SUM(a.orderQty-a.withdrawQty) * 100 qty2  FROM OpenOrder a  WHERE stkType = 'A4' AND   orderType like  '%B'     AND withdrawFlag = 'F' AND validFlag <> 1 AND exchId = '1' GROUP BY a.exchId, a.regId, a.deskId ) GROUP BY exchId, regId, deskId, stkId )b  WHERE a.exchId=b.exchId AND  a.regId =b.regId AND a.deskId=b.deskId AND a.stkId =b.stkId) ;

time=2021-08-09 15:16:35.529, nano=518722457678068, cost=8.78, sid=279, sql=UPDATE StkList c SET (c.currentQty,c.usableQty) = (SELECT   d.currentQty, d.usableQty  FROM(SELECT exchId, regId, deskId, stkId, SUM(qty) currentQty ,SUM(qty2) usableQty  FROM ( SELECT a.exchId exchId, a.regId regId, a.deskId deskId, 131990 stkId,  TRUNC(SUM(a.bondPledgeQty * b.standardConvertRate * 100)) qty , TRUNC(SUM(a.BondPledgeUsableQty * b.newconvertrate * 100)) qty2 FROM StkList a, BondPara b, Registration r WHERE b.exchId = a.exchId AND b.bondId = a.stkId     AND a.exchId = '1'  AND (a.bondPledgeQty <> 0 OR a.BondPledgeUsableQty <> 0)     AND r.exchId = a.exchId AND r.regId = a.regId GROUP BY a.exchId, a.regId, a.deskId  UNION ALL  SELECT a.exchId, a.regId, a.deskId, 131990 stkId,  SUM(-a.knockQty) * 100 qty ,  SUM(CASE WHEN deliveryFlag = 0 THEN -a.knockQty*100 WHEN a.returnDate > 20210810235959 AND b.stkuseableflag = 1 THEN -a.knockQty*100 WHEN b.stkuseableflag = 0 THEN -a.knockQty*100 ELSE 0 END) qty2  FROM Unduerepurchasebonds a,RepurchasePara b  WHERE a.exchId =b.exchId AND a.stkId = b.stkId  AND a.financeOrderFlag = 0 AND a.stkType = 'A4' AND a.exchId = '1'   GROUP BY a.exchId, a.regId, a.deskId  UNION ALL  SELECT a.exchId, a.regId, a.deskId, 131990 stkId,  0 qty ,  -SUM(a.orderQty-a.withdrawQty) * 100 qty2  FROM OpenOrder a  WHERE stkType = 'A4' AND   orderType like  '%B'     AND withdrawFlag = 'F' AND validFlag <> 1 AND exchId = '1' GROUP BY a.exchId, a.regId, a.deskId ) GROUP BY exchId, regId, deskId, stkId ) d  WHERE c.exchId =d.exchId AND c.regId = d.regId  AND c.deskId =d.deskId AND  c.stkId =d.stkId  AND c.exchId ='1' AND c.stkType ='C4' ) WHERE EXISTS (SELECT 'X'  FROM(SELECT exchId, regId, deskId, stkId, SUM(qty) currentQty ,SUM(qty2) usableQty  FROM ( SELECT a.exchId exchId, a.regId regId, a.deskId deskId, 131990 stkId,  TRUNC(SUM(a.bondPledgeQty * b.standardConvertRate * 100)) qty , TRUNC(SUM(a.BondPledgeUsableQty * b.newconvertrate * 100)) qty2 FROM StkList a, BondPara b, Registration r WHERE b.exchId = a.exchId AND b.bondId = a.stkId     AND a.exchId = '1'  AND (a.bondPledgeQty <> 0 OR a.BondPledgeUsableQty <> 0)     AND r.exchId = a.exchId AND r.regId = a.regId GROUP BY a.exchId, a.regId, a.deskId  UNION ALL  SELECT a.exchId, a.regId, a.deskId, 131990 stkId,  SUM(-a.knockQty) * 100 qty ,  SUM(CASE WHEN deliveryFlag = 0 THEN -a.knockQty*100 WHEN a.returnDate > 20210810235959 AND b.stkuseableflag = 1 THEN -a.knockQty*100 WHEN b.stkuseableflag = 0 THEN -a.knockQty*100 ELSE 0 END) qty2  FROM Unduerepurchasebonds a,RepurchasePara b  WHERE a.exchId =b.exchId AND a.stkId = b.stkId  AND a.financeOrderFlag = 0 AND a.stkType = 'A4' AND a.exchId = '1'   GROUP BY a.exchId, a.regId, a.deskId  UNION ALL  SELECT a.exchId, a.regId, a.deskId, 131990 stkId,  0 qty ,  -SUM(a.orderQty-a.withdrawQty) * 100 qty2  FROM OpenOrder a  WHERE stkType = 'A4' AND   orderType like  '%B'     AND withdrawFlag = 'F' AND validFlag <> 1 AND exchId = '1' GROUP BY a.exchId, a.regId, a.deskId ) GROUP BY exchId, regId, deskId, stkId ) d  WHERE c.exchId =d.exchId AND c.regId = d.regId  AND c.deskId =d.deskId AND  c.stkId =d.stkId  AND c.exchId ='1' AND c.stkType ='C4' );

time=2021-08-09 15:16:35.545, nano=518722472859978, cost=15.162, sid=279, sql=INSERT INTO StkList (exchId, regId, regName, offerRegId, custId, acctId, currencyId, stkId, stkName, stkType, tradeType, deskId, usableQty, stkVAlue, currentStkValue, newPrice, previousQty, previousCost, previousIncome, realTimeCost, realTimeIncome, currentQty) SELECT c.exchId, c.regId, d.regName, d.offerRegId, d.custId, d.acctId, d.currencyId, c.stkId, '新标准券', 'C4', 'A0', c.deskId, c.usableQty, c.usableQty, c.usableQty, 1, 0, 0, 0, 0, 0, c.currentQty FROM (SELECT exchId, regId, deskId, stkId, SUM(qty) currentQty ,SUM(qty2) usableQty  FROM ( SELECT a.exchId exchId, a.regId regId, a.deskId deskId, 131990 stkId,  TRUNC(SUM(a.bondPledgeQty * b.standardConvertRate * 100)) qty , TRUNC(SUM(a.BondPledgeUsableQty * b.newconvertrate * 100)) qty2 FROM StkList a, BondPara b, Registration r WHERE b.exchId = a.exchId AND b.bondId = a.stkId     AND a.exchId = '1'  AND (a.bondPledgeQty <> 0 OR a.BondPledgeUsableQty <> 0)     AND r.exchId = a.exchId AND r.regId = a.regId GROUP BY a.exchId, a.regId, a.deskId  UNION ALL  SELECT a.exchId, a.regId, a.deskId, 131990 stkId,  SUM(-a.knockQty) * 100 qty ,  SUM(CASE WHEN deliveryFlag = 0 THEN -a.knockQty*100 WHEN a.returnDate > 20210810235959 AND b.stkuseableflag = 1 THEN -a.knockQty*100 WHEN b.stkuseableflag = 0 THEN -a.knockQty*100 ELSE 0 END) qty2  FROM Unduerepurchasebonds a,RepurchasePara b  WHERE a.exchId =b.exchId AND a.stkId = b.stkId  AND a.financeOrderFlag = 0 AND a.stkType = 'A4' AND a.exchId = '1'   GROUP BY a.exchId, a.regId, a.deskId  UNION ALL  SELECT a.exchId, a.regId, a.deskId, 131990 stkId,  0 qty ,  -SUM(a.orderQty-a.withdrawQty) * 100 qty2  FROM OpenOrder a  WHERE stkType = 'A4' AND   orderType like  '%B'     AND withdrawFlag = 'F' AND validFlag <> 1 AND exchId = '1' GROUP BY a.exchId, a.regId, a.deskId ) GROUP BY exchId, regId, deskId, stkId ) c, Registration d  WHERE d.exchId = c.exchId AND d.regId = c.regId and length(c.deskId)<=8 AND NOT EXISTS (SELECT 'X' FROM stkList s WHERE c.exchId =s.exchId AND c.regId = s.regId  AND c.deskId =s.deskId AND  c.stkId =s.stkId  AND c.exchId ='1' AND s.stkType ='C4');



time=2021-08-09 15:16:35.614, nano=518722541924884, cost=5.005, sid=279, sql=UPDATE StkList c SET c.usableQty = c.currentQty + NVL((SELECT d.qty FROM (SELECT exchId, regId, deskId, SUM(qty) qty FROM ( SELECT a.exchId exchId, a.regId regId, a.deskId deskId, 	SUM(TRUNC(a.bondPledgeQty * (b.newConvertRate - b.closeConvertRate) * 100)) qty FROM StkList a, BondPara b, Registration r WHERE b.exchId = a.exchId AND b.bondId = a.stkId 	AND b.newConvertRate <> b.closeConvertRate 	AND a.exchId = '0'  AND a.bondPledgeQty <> 0 	AND r.exchId = a.exchId AND r.regId = a.regId GROUP BY a.exchId, a.regId, a.deskId UNION ALL SELECT exchId, regId, deskId, SUM(CASE WHEN deliveryFlag = 0 THEN -knockQty ELSE knockQty END) * 100 qty FROM Unduerepurchasebonds WHERE financeOrderFlag = 0 AND stkType = 'C3' AND exchId = '0' AND (returnDate <= 20210810235959 OR deliveryFlag = 0) GROUP BY exchId, regId, deskId UNION ALL SELECT exchId, regId, deskId, -SUM(orderQty-withdrawQty) * 100 qty FROM OpenOrder WHERE stkType = 'C3' AND tradeType = 'A0' AND orderType = 'B' 	AND withdrawFlag = 'F' AND validFlag <> 1 AND exchId = '0' GROUP BY exchId, regId, deskId UNION ALL SELECT exchId, regId, deskId, SUM(DECODE(orderType, 'B', knockQty, knockQty*-1)) qty FROM tradingResult WHERE stkId='888880' AND exchId = '0'  AND regId <> '1920000000' GROUP BY exchId, regId, deskId) GROUP BY exchId, regId, deskId) d WHERE d.exchId = c.exchId AND d.regId = c.regId AND d.deskId = c.deskId), 0), sellFrozenQty = 0 WHERE c.stkId = '888880' AND c.exchId = '0'  AND regId <> '1920000000';

time=2021-08-09 15:16:35.707, nano=518722635048119, cost=9.874, sid=279, sql=INSERT INTO StkList (exchId, regId, regName, offerRegId, custId, acctId, currencyId, stkId, stkName, stkType, tradeType, deskId, usableQty, stkVAlue, currentStkValue, newPrice, previousQty, previousCost, previousIncome, realTimeCost, realTimeIncome, currentQty) SELECT c.exchId, c.regId, d.regName, d.offerRegId, d.custId, d.acctId, d.currencyId, '888880', '标准券', 'C4', 'A0', c.deskId, c.qty, c.qty, c.qty, 100, 0, 0, 0, 0, 0, 0 FROM (SELECT exchId, regId, deskId, SUM(qty) qty FROM ( SELECT a.exchId exchId, a.regId regId, a.deskId deskId, 	SUM(TRUNC(a.bondPledgeQty * (b.newConvertRate - b.closeConvertRate) * 100)) qty FROM StkList a, BondPara b, Registration r WHERE b.exchId = a.exchId AND b.bondId = a.stkId 	AND b.newConvertRate <> b.closeConvertRate 	AND a.exchId = '0'  AND a.bondPledgeQty <> 0 	AND r.exchId = a.exchId AND r.regId = a.regId GROUP BY a.exchId, a.regId, a.deskId UNION ALL SELECT exchId, regId, deskId, SUM(CASE WHEN deliveryFlag = 0 THEN -knockQty ELSE knockQty END) * 100 qty FROM Unduerepurchasebonds WHERE financeOrderFlag = 0 AND stkType = 'C3' AND exchId = '0' AND (returnDate <= 20210810235959 OR deliveryFlag = 0) GROUP BY exchId, regId, deskId UNION ALL SELECT exchId, regId, deskId, -SUM(orderQty-withdrawQty) * 100 qty FROM OpenOrder WHERE stkType = 'C3' AND tradeType = 'A0' AND orderType = 'B' 	AND withdrawFlag = 'F' AND validFlag <> 1 AND exchId = '0' GROUP BY exchId, regId, deskId UNION ALL SELECT exchId, regId, deskId, SUM(DECODE(orderType, 'B', knockQty, knockQty*-1)) qty FROM tradingResult WHERE stkId='888880' AND exchId = '0'  AND regId <> '1920000000' GROUP BY exchId, regId, deskId) e WHERE NOT EXISTS (SELECT e.exchId FROM StkList f WHERE f.exchId = e.exchId AND f.regId = e.regId AND f.deskId = e.deskId AND f.stkId = '888880' AND f.exchId = '0' AND regId <> '1920000000') GROUP BY exchId, regId, deskId) c, Registration d WHERE d.exchId = c.exchId AND d.regId = c.regId and length(c.deskId)<=8;

time=2021-08-09 15:16:35.708, nano=518722635963160, cost=0.897, sid=279, index=1, sql= SELECT a.exchId, a.regId, a.deskId, a.stkId, SUM(a.orderQty-a.withdrawQty) qty  FROM OpenOrder a WHERE a.stkType = 'C3' AND a.tradeType ='C3' AND a.validFlag = -1 	AND a.orderType = 'B' 	AND a.withdrawFlag = 'F' AND a.exchId = '0'  GROUP BY a.exchId, a.regId, a.deskId, a.stkId ;
